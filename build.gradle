buildscript {
    ext {
        springBootVersion = '2.2.4.RELEASE'
    }
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/release" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

plugins {
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
    id "com.github.ben-manes.versions" version "0.27.0"
    id "org.sonarqube" version "2.7.1"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

group = "com.haw.laden"
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 13

repositories {
    jcenter()
    mavenCentral()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/release" }
    maven { url 'http://sndyuk.github.com/maven' }
}

configurations {
    testCompile.exclude group: 'junit', module: 'junit'
}

ext {
    set('springCloudVersion', "Hoxton.SR1")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'com.sndyuk:logback-more-appenders:1.7.4'
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    implementation 'org.mockito:mockito-core:3.2.4'
    implementation 'org.springframework.cloud:spring-cloud-gcp-starter-pubsub:1.2.1.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-ribbon'



    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'

    testImplementation 'org.assertj:assertj-core:3.15.0'
    testImplementation 'io.rest-assured:rest-assured:4.2.0'
    testCompile 'io.rest-assured:json-path:4.2.0'
    testCompile 'io.rest-assured:xml-path:4.2.0'
    testImplementation 'io.rest-assured:spring-mock-mvc:4.2.0'
    testImplementation 'org.hamcrest:java-hamcrest:2.0.0.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.5.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.1'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform {
        excludeEngines 'junit-vintage'
    }
    failFast = true
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }

}
